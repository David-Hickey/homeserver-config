# Docker Compose file for running paperless from the Docker Hub.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8000.
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# - Instead of SQLite (default), PostgreSQL is used as the database server.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker compose pull'.
# - Run 'docker compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.

services:
  broker:
    image: docker.io/library/redis:8
    restart: unless-stopped
    volumes:
      - redisdata:/data
    networks:
      - paperless-internal
  db:
    image: docker.io/library/postgres:17
    restart: unless-stopped
    volumes:
      - /srv/ssd/paperless/pgdata:/var/lib/postgresql/data
    networks:
      - paperless-internal
    env_file:
      - public.env
      - private.env
  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless-app
    restart: unless-stopped
    depends_on:
      - db
      - broker
    volumes:
      - /srv/ssd/paperless/data:/usr/src/paperless/data
      - /srv/ssd/paperless/media:/usr/src/paperless/media
      - /srv/ssd/paperless/export:/usr/src/paperless/export
      - /srv/ssd/paperless/consume:/usr/src/paperless/consume
    env_file:
      - public.env
      - private.env
    networks:
      - paperless-internal
      - paperless-internet
      - caddy-proxy
      - authelia-auth
volumes:
  redisdata:

networks:
  caddy-proxy:
    external: true
  authelia-auth:
    external: true
  paperless-internal:
    internal: true
  paperless-internet:
